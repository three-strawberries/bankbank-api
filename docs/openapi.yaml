openapi: 3.0.3
info:
  title: Bankbank API
  version: 1.0.1
servers:
  - url: http://localhost:8080/api
paths:
  /accounts:
    get:
      summary: Get all accounts
      tags:
        - Account
      responses:
        '200':
          $ref: '#/components/responses/AccountsList'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /account:
    post:
      summary: Create a new account
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /account/{id}:
    get:
      summary: Get account by ID
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the account to retrieve
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: Update account by ID
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the account to update
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete account by ID
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the account to delete
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Account deleted successfully
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /transactions:
    get:
      summary: Get all transactions
      tags:
        - Transaction
      responses:
        '200':
          $ref: '#/components/responses/TransactionsList'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /transaction:
    post:
      summary: Create a new transaction
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /transaction/{id}:
    get:
      summary: Get transaction by ID
      tags:
        - Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction to retrieve
          schema:
            type: integer
            format: int
      responses:
        '200':
          $ref: '#/components/responses/200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: Update transaction by ID
      tags:
        - Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction to update
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete transaction by ID
      tags:
        - Transaction
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction to delete
          schema:
            type: integer
            format: int
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /balances:
    get:
      summary: Get all balances histories
      tags:
        - Balance
      responses:
        '200':
          $ref: '#/components/responses/BalancesList'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /balance:
    post:
      summary: Create a new balance record
      tags:
        - Balance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Balance'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /balanceHistory/{id}:
    get:
      summary: Get balance record by ID
      tags:
        - Balance
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the balance record to retrieve
          schema:
            type: integer
            format: int
      responses:
        '200':
          $ref: '#/components/responses/200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: Update balance record by ID
      tags:
        - Balance
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the balance record to update
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Balance'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete balance record by ID
      tags:
        - Balance
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the balance record to delete
          schema:
            type: integer
            format: int
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /transactionGroups:
    get:
      summary: Get all transactions groups
      tags:
        - TransactionGroup
      responses:
        '200':
          $ref: '#/components/responses/TransactionGroupList'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /transactionGroup:
    post:
      summary: Create a new transaction group
      tags:
        - TransactionGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionGroup'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /transactionGroup/{id}:
    get:
      summary: Get transaction group by ID
      tags:
        - TransactionGroup
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction group to retrieve
          schema:
            type: integer
            format: int
      responses:
        '200':
          $ref: '#/components/responses/200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionGroup'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: Update transaction group by ID
      tags:
        - TransactionGroup
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction group to update
          schema:
            type: integer
            format: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionGroup'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      summary: Delete transaction group by ID
      tags:
        - TransactionGroup
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction group to delete
          schema:
            type: integer
            format: int
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /ping:
    get:
      summary: Check the health of the server
      tags:
        - Health
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: pong
        '500':
          $ref: '#/components/responses/500'
components:
  schemas:
    Account:
      type: object
      properties:
        idAccount:
          type: integer
          format: int
        lastName:
          type: string
        firstName:
          type: string
        birthDate:
          type: string
          format: date
        monthlySalary:
          type: number
        authorizedCredit:
          type: string
        bankName:
          type: string
        idBalance:
          type: integer
          format: int
      required:
        - idAccount
        - lastName
        - firstName
        - birthDate
        - monthlySalary
        - authorizedCredit
        - bankName
        - idBalance
    Transaction:
      type: object
      properties:
        idTransaction:
          type: integer
          format: int
        timestamp:
          type: string
        reference:
          type: string
        description:
          type: string
        debit:
          type: number
        credit:
          type: number
        idAccountSender:
          type: number
        idAccountReceiver:
          type: number
        typeTransaction:
          type: string
          enum:
            - withdrawal
            - external_transfer
            - internal_transfer
      required:
        - idTransaction
        - timestamp
        - reference
        - description
        - debit
        - credit
        - idAccountSender
        - idAccountReceiver
        - typeTransaction
    TransactionGroup:
      type: object
      properties:
        idTransactionGroup:
          type: integer
          format: int
        timestamp:
          type: string
        description:
          type: string
        method:
          type: string
        idAccountSender:
          type: integer
          format: int
      required:
        - idTransactionGroup
        - timestamp
        - description
        - method
        - idAccountSender
    Balance:
      type: object
      properties:
        idBalance:
          type: integer
          format: int
        timestamp:
          type: string
        amount:
          type: number
        typeBalance:
          type: string
          enum:
            - main_balance
            - loans
            - interest_on_loans
      required:
        - idBalance
        - timestamp
        - amount
        - type
  responses:
    '200':
      description: Successfully
    '201':
      description: Created/updated successfully
    '400':
      description: Bad request
    '404':
      description: Not found
    '500':
      description: Internal server error
    AccountsList:
      description: Successful operation, returns a list of accounts.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Account'
    TransactionsList:
      description: Successful operation, returns a list of transactions.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Transaction'
    TransactionGroupList:
      description: Successful operation, returns a list of transactions groups.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TransactionGroup'
    BalancesList:
      description: Successful operation, returns a list of balances .
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Balance'
